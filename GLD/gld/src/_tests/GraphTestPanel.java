/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package _tests;

import java.awt.Color;
import java.awt.Font;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.XYPointerAnnotation;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.TextAnchor;

/**
 *
 * @author wagner
 */
public class GraphTestPanel extends javax.swing.JPanel {
    
    XYSeries series = new XYSeries("Carga kW");

    /**
     * Creates new form GraphTestPanel
     */
    public GraphTestPanel() {
        initComponents();
        Thread th = new Thread(this.new UpdaterThread());
        th.setDaemon(true);
        th.start();
    }
    
    public void createChart() {
        series = new XYSeries("XYGraph");

        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);

        JFreeChart chart = ChartFactory.createXYAreaChart("Curva de Carga", "Hora", "PotÃªncia Ativa", dataset, PlotOrientation.VERTICAL, true, true, false);

        XYPlot xyplot = (XYPlot) chart.getPlot();
        xyplot.setBackgroundPaint(Color.lightGray);
        xyplot.setForegroundAlpha(0.65F);
        xyplot.setDomainGridlinePaint(Color.white);
        xyplot.setRangeGridlinePaint(Color.white);

        ValueAxis xAxis = xyplot.getDomainAxis();

        xAxis.setTickMarkPaint(Color.black);
        xAxis.setRange(0, 100);

        ValueAxis yAxis = xyplot.getRangeAxis();
        yAxis.setRange(0, 100);

        XYPointerAnnotation xypointerannotation = new XYPointerAnnotation("Test", 5D, -500D, 2.3561944901923448D);
        xypointerannotation.setTipRadius(0.0D);
        xypointerannotation.setBaseRadius(35D);
        xypointerannotation.setFont(new Font("SansSerif", 0, 9));
        xypointerannotation.setPaint(Color.blue);
        xypointerannotation.setTextAnchor(TextAnchor.HALF_ASCENT_RIGHT);
        xyplot.addAnnotation(xypointerannotation);

        ChartPanel myChartPanel = new ChartPanel(chart, true);
        
        myChartPanel.setSize(440 , 300);
        myChartPanel.setVisible(true);
        this.removeAll();
        this.add(myChartPanel);
        this.revalidate();
        this.repaint();
    }
    
    public class UpdaterThread implements Runnable {

        private double SIZE = 100;

        @Override
        public void run() {

            int i = 1;
            while (true) {
                i++;

                final int j = (int) (Math.random() * SIZE);

                if (i % 2 == 0) {
                    series.addOrUpdate(i, j);
                }

                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
