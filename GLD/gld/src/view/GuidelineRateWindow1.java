/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.UserDAO;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import model.Login;
import model.User;
import model.UserTableModel;
import exceptions.SQLFindUserException;
import exceptions.SQLRegisterException;

/**
 *
 * @author greg
 */
public class GuidelineRateWindow1 extends javax.swing.JPanel {

    int selectedRow = 0;    
    Login user;
    MainMenu mainm;
    NewMainMenu newMainm;
    /**
     * Creates new form GuidelineRate
     */
    public GuidelineRateWindow1(int y) {
        setSize(1024, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelTabel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        guidelineTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        registerLabel = new javax.swing.JLabel();
        outPeakDemandField = new javax.swing.JPasswordField();
        outPeakDryField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwrod2Label = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        cell_oiLabel = new javax.swing.JLabel();
        cell_vivoLabel = new javax.swing.JLabel();
        cell_timLabel = new javax.swing.JLabel();
        cell_claroLabel = new javax.swing.JLabel();
        profileLabel = new javax.swing.JLabel();
        warningLabel = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        guidelineComboBox = new javax.swing.JComboBox();
        outPeakHumidField = new javax.swing.JTextField();
        peakDemandField = new javax.swing.JTextField();
        peakEnergyDryField = new javax.swing.JTextField();
        peakEnergyHumidField = new javax.swing.JTextField();
        categoryComboBox = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setPreferredSize(new java.awt.Dimension(1000, 490));

        panelTabel.setBorder(javax.swing.BorderFactory.createTitledBorder("Enquadramentos Tarifários Cadastrados"));

        guidelineTable.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        guidelineTable.setModel(table);
        guidelineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guidelineTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(guidelineTable);
        guidelineTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout panelTabelLayout = new javax.swing.GroupLayout(panelTabel);
        panelTabel.setLayout(panelTabelLayout);
        panelTabelLayout.setHorizontalGroup(
            panelTabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panelTabelLayout.setVerticalGroup(
            panelTabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTabelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Enquadramento Tarifário"));

        nameLabel.setText("*Tipo de Tarifa:");
        nameLabel.setName(""); // NOI18N

        registerLabel.setText("*Categoria:");

        passwordLabel.setText("Fora de Ponta:");

        passwrod2Label.setText("*Custo Demanda:");

        emailLabel.setText("*Custo Energia Seca:");

        cell_oiLabel.setText("*Custo Energia Úmida:");

        cell_vivoLabel.setText("Ponta");

        cell_timLabel.setText("*Custo Demanda:");

        cell_claroLabel.setText("*Custo Energia Seca:");

        profileLabel.setText("*Custo Energia Úmida:");

        warningLabel.setText("<html>Os campos assinalados com asterisco (*) <br>são de preencimento obrigatório</html>");

        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/user_edit.png"))); // NOI18N
        updateButton.setText("Cadastrar");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        guidelineComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione a Tarifa", "Convencional", "Horo-Sazonal Azul", "Horo-Sazonal Verde" }));

        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione a Categoria", "A2 - Comercial/Industrial", "A2 - Poder Público", "A2 - Saneamento (redução de 15%)", "A3a - (30 a 44 kV)", "A3a - Saneamento (redução de 15%)", "A3a - Comercial/Industrial", "A4 - Comercial/Industrial", "A4 - Poder Público", "A4 - Saneamento (redução de 15%)", "A4 - Rural (redução de 10%)", "A4 - Madrugada (redução de 80%)", "A4 - Cooperativa (redução de 50%)", "A4 - Residencial", "AS - Comercial/Industrial", "AS - Poder Público" }));
        categoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cell_claroLabel)
                            .addComponent(cell_timLabel)
                            .addComponent(cell_oiLabel)
                            .addComponent(nameLabel)
                            .addComponent(registerLabel)
                            .addComponent(passwrod2Label)
                            .addComponent(emailLabel)
                            .addComponent(profileLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(outPeakDemandField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(guidelineComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(peakEnergyHumidField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addComponent(peakEnergyDryField, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(peakDemandField, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(outPeakHumidField, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(outPeakDryField, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(categoryComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(653, 653, 653))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateButton)
                            .addComponent(passwordLabel)
                            .addComponent(cell_vivoLabel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(guidelineComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerLabel)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(passwordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outPeakDemandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwrod2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outPeakDryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell_oiLabel)
                    .addComponent(outPeakHumidField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(cell_vivoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell_timLabel)
                    .addComponent(peakDemandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cell_claroLabel)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(peakEnergyDryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(peakEnergyHumidField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(profileLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateButton)
                .addGap(59, 59, 59))
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/house_go.png"))); // NOI18N
        jButton2.setText("Voltar ao Menu Principal");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelTabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 74, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelTabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void guidelineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guidelineTableMouseClicked
        if (selectedRow == guidelineTable.getSelectedRow()) {
            limpar();
            selectedRow = -1;
        } else {
            if (guidelineTable.getSelectedRow() != -1) {
                limpar();
                GuidelineRate = guidelineRate.get(guidelineTable.getSelectedRow());
             
            selectedRow = guidelineTable.getSelectedRow();
        }
    }//GEN-LAST:event_guidelineTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int profile = 0;
        if (profileCombo.getSelectedItem().equals("Administrador")) {
            profile = 1;
        }
        if (profileCombo.getSelectedItem().equals("Técnico")) {
            profile = 2;
        }
        if (Verifications()) {
            String cell_oi = (cell_oiField.getText().equals("(  )    -    ")) ? null : cell_oiField.getText();
            String cell_vivo = (cell_vivoField.getText().equals("(  )    -    ")) ? null : cell_vivoField.getText();
            String cell_tim = (cell_timField.getText().equals("(  )    -    ")) ? null : cell_timField.getText();
            String cell_claro = (cell_claroField.getText().equals("(  )    -    ")) ? null : cell_claroField.getText();
            String email = (outPeakDryField.getText().equals("")) ? null : outPeakDryField.getText();
            User user = new User(nameField.getText(), registerField.getText(),
                    passwordField.getText().toString(), email,
                    cell_oi, cell_vivo, cell_tim, cell_claro, profile, 1);
            if (updateButton.getText().equals("Atualizar")) {
                try {
                    dao.updateUser(user);
                } catch (SQLFindUserException e) {
                    JOptionPane.showMessageDialog(null, "Usuário não encontrado!", "Erro: Atualizar Usuário",
                            JOptionPane.ERROR_MESSAGE);
                } catch (SQLException ex) {
                    Logger.getLogger(GuidelineRateWindow1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (updateButton.getText().equals("Cadastrar")) {
                try {
                    dao.createUser(user);
                } catch (SQLRegisterException e) {
                    JOptionPane.showMessageDialog(null, "Matrícula é um campo "
                            + "identificador!\nVerifique a matrícula digitada!", "Erro: Matrícula",
                            JOptionPane.ERROR_MESSAGE);
                } catch (SQLException ex) {
                    Logger.getLogger(GuidelineRateWindow1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            table.limpar();
            try {
                usuarios = dao.readUsers();
                table.addUserList(usuarios);
            } catch (SQLException e) {
                Logger.getLogger(GuidelineRateWindow1.class.getName()).log(Level.SEVERE, null, e);
            }
            limpar();
            guidelineTable.repaint();
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //MainWindow.desktop.removeAll();
        //mainm = new MainMenu(user);
        //MainWindow.desktop.add(mainm);
        //MainWindow.desktop.revalidate();
        //MainWindow.desktop.repaint();
        MainWindow.desktop.removeAll();
        newMainm = new NewMainMenu(user);
        MainWindow.desktop.add(newMainm);
        MainWindow.desktop.revalidate();
        MainWindow.desktop.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void categoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox categoryComboBox;
    private javax.swing.JLabel cell_claroLabel;
    private javax.swing.JLabel cell_oiLabel;
    private javax.swing.JLabel cell_timLabel;
    private javax.swing.JLabel cell_vivoLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JComboBox guidelineComboBox;
    private javax.swing.JTable guidelineTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPasswordField outPeakDemandField;
    private javax.swing.JTextField outPeakDryField;
    private javax.swing.JTextField outPeakHumidField;
    private javax.swing.JPanel panelTabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwrod2Label;
    private javax.swing.JTextField peakDemandField;
    private javax.swing.JTextField peakEnergyDryField;
    private javax.swing.JTextField peakEnergyHumidField;
    private javax.swing.JLabel profileLabel;
    private javax.swing.JLabel registerLabel;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables


    public boolean Verifications() {
        if (guidelineComboBox.getSelectedItem().toString().equals("Selecione a Tarifa")) {
            JOptionPane.showMessageDialog(null, "Escolha uma opção no campo tarifa!",
                    "Erro: Tarifa",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (categoryComboBox.getSelectedItem().toString().equals("Selecione a Categoria")) {
            JOptionPane.showMessageDialog(null, "Escolha uma opção no campo categoria!",
                    "Erro: Categoria",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (outPeakDemandField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "O campo demanda fora de ponta deve ser preenchido!",
                    "Erro: Demanda fora de ponta",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (outPeakDryField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "O campo custo fora de ponta seca deve ser preenchido!",
                    "Erro: Custo fora de ponta seca",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (outPeakHumidField.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo custo fora de ponta úmida deve ser preenchido!", 
                    "Erro: Custo fora de ponta umida", 
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (peakDemandField.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo demanda em ponta deve ser preenchido!", 
                    "Erro: Demanda em ponta", 
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (peakEnergyDryField.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo custo de ponta seca deve ser preenchido!", 
                    "Erro: Custo de ponta seca", 
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (peakEnergyHumidField.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo custo de ponta úmida deve ser preenchido!", 
                    "Erro: Custo de ponta umida", 
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return true;
    }

    public void limpar() {
        guidelineComboBox.setSelectedIndex(0);
        categoryComboBox.setSelectedItem(0);
        outPeakDemandField.setText("");
        outPeakDryField.setText("");
        outPeakHumidField.setText("");
        peakDemandField.setText("");
        peakEnergyDryField.setText("");
        peakEnergyHumidField.setText("");
        updateButton.setText("Cadastrar");
    }
}
